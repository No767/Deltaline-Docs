{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Deltaline Documentation Introduction Welcome to the Deltaline Documentation. This serves as the offical documentation for Deltaline, and is available on GitHub. The docs is spilt into these pages here Contributing Contributing to the Docs Contributing to Deltaline Issues with the Digital Portfolio Issues with the Digital Portfolio Terms and Conditions Art Assets About About Project Deltaline Art Assets","title":"Home"},{"location":"#deltaline-documentation","text":"","title":"Deltaline Documentation"},{"location":"#introduction","text":"Welcome to the Deltaline Documentation. This serves as the offical documentation for Deltaline, and is available on GitHub. The docs is spilt into these pages here","title":"Introduction"},{"location":"#contributing","text":"Contributing to the Docs Contributing to Deltaline","title":"Contributing"},{"location":"#issues-with-the-digital-portfolio","text":"Issues with the Digital Portfolio","title":"Issues with the Digital Portfolio"},{"location":"#terms-and-conditions","text":"Art Assets","title":"Terms and Conditions"},{"location":"#about","text":"About Project Deltaline Art Assets","title":"About"},{"location":"About%20Project%20Deltaline/","text":"About Deltaline Deltaline is basically the name for my digital portfolio, which is needed in school. I have written this docs out to lay the basic framework that the digital portfolio contains Issues with the Digital Portfolio The digital portfolio (Project Deltaline) is hosted on Google Sites. Now, it's meant as a static webpage, but when you add tons of hd assets, and tons of iframes and html code; it starts to lag. This is due to Google's Sites inefficient loading speeds and useless JS code. And the litmiations that google sites has doesn't allow me to use the Bootstrap lib, or use .svg or .webp files for faster load times. For more detail, please look at Issues with the Digital Portfolio page jere","title":"About Project Deltaline"},{"location":"About%20Project%20Deltaline/#about-deltaline","text":"Deltaline is basically the name for my digital portfolio, which is needed in school. I have written this docs out to lay the basic framework that the digital portfolio contains","title":"About  Deltaline"},{"location":"About%20Project%20Deltaline/#issues-with-the-digital-portfolio","text":"The digital portfolio (Project Deltaline) is hosted on Google Sites. Now, it's meant as a static webpage, but when you add tons of hd assets, and tons of iframes and html code; it starts to lag. This is due to Google's Sites inefficient loading speeds and useless JS code. And the litmiations that google sites has doesn't allow me to use the Bootstrap lib, or use .svg or .webp files for faster load times. For more detail, please look at Issues with the Digital Portfolio page jere","title":"Issues with the Digital Portfolio"},{"location":"Art%20Assets/","text":"Art Assets This page provides the terms and conditions under which you may use the logo and any other art assets provided in this project. By using it, you are agreeing that you will follow the guidelines set here. You may: If used, you have to state the changes, and give proper credit to whoever designed the logo (No767 designed the logo) You may not: Change or alter any of the colors used in the logo Change the sizes of the logos Share, and create modified versions of the logo or derivative works of it Use this for your own projects Claim the logo as your own work Sell the logo on its own or with other projects or as part of other projects without explcit permissions Commercially use this logo in any way, shape or form Use this for educational purposes Logo The logo is licensed under the CC-BY-NC-ND 4.0 Public License, and may be found here","title":"Art Assets"},{"location":"Art%20Assets/#art-assets","text":"This page provides the terms and conditions under which you may use the logo and any other art assets provided in this project. By using it, you are agreeing that you will follow the guidelines set here. You may: If used, you have to state the changes, and give proper credit to whoever designed the logo (No767 designed the logo) You may not: Change or alter any of the colors used in the logo Change the sizes of the logos Share, and create modified versions of the logo or derivative works of it Use this for your own projects Claim the logo as your own work Sell the logo on its own or with other projects or as part of other projects without explcit permissions Commercially use this logo in any way, shape or form Use this for educational purposes","title":"Art Assets"},{"location":"Art%20Assets/#logo","text":"The logo is licensed under the CC-BY-NC-ND 4.0 Public License, and may be found here","title":"Logo"},{"location":"Contributing%20to%20Deltaline/","text":"Contributing to Deltaline Deltaline is completely open source, licensed under the GPL-3.0 License. Currently, it's written in HTML, but I plan to rewrite it in Vue.js later on. The Logo is licensed under the CC-BY-ND-NC 4.0 License, and can be found here . All other works within Deltaline are all rights reserved. So, how do you contribute? Well it's already listed in the repo, but here's the contributing guidelines Styleguides Git Commit Messages Describe what is the change (branch change, clean up code, etc) If it's updating the other files (that dont have to go through the CI), add a [ci skip] label in the front of the commit message or use [skip ci] or [skip netlify] so netlify won't try and build and deploy it and give the \"failed\" rating on the badge Issues Add a label Use one of the templates that is available Pull Requests Describe the change (issue fix, clean up code, etc) When doing a pull request, make sure the pull request goes into the dev branch And dont delete the dev branch List the branch, and the commit number starting from the most recent commit Code Styleguides Please make sure that the code is readable and clean. for example, <head><meta name=\"viewport\" content =\"width=device-width, initial-scale=1, user-scalable=yes\" /> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\"> <link rel=\"stylesheet\" href=\"style.css\"> <link rel=\"shortcut icon\" type=\"image/jpg\" href=\"Dcey SMP Logo V4 Release.webp\"/> <title>Deltaline</title> </head> (proper example) This is a proper way to do it. But for example, <meta charset=\"utf-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\"> <link rel=\"stylesheet\" href=\"style.css\"> <link rel=\"shortcut icon\" type=\"image/jpg\" href=\"Dcey SMP Logo V4 Release.webp\"/> <title>Deltaline</title> this one is too messy and it's kinda hard to read Long story short : Just make it easy to read","title":"Contributing to Deltaline"},{"location":"Contributing%20to%20Deltaline/#contributing-to-deltaline","text":"Deltaline is completely open source, licensed under the GPL-3.0 License. Currently, it's written in HTML, but I plan to rewrite it in Vue.js later on. The Logo is licensed under the CC-BY-ND-NC 4.0 License, and can be found here . All other works within Deltaline are all rights reserved. So, how do you contribute? Well it's already listed in the repo, but here's the contributing guidelines","title":"Contributing to Deltaline"},{"location":"Contributing%20to%20Deltaline/#styleguides","text":"","title":"Styleguides"},{"location":"Contributing%20to%20Deltaline/#git-commit-messages","text":"Describe what is the change (branch change, clean up code, etc) If it's updating the other files (that dont have to go through the CI), add a [ci skip] label in the front of the commit message or use [skip ci] or [skip netlify] so netlify won't try and build and deploy it and give the \"failed\" rating on the badge","title":"Git Commit Messages"},{"location":"Contributing%20to%20Deltaline/#issues","text":"Add a label Use one of the templates that is available","title":"Issues"},{"location":"Contributing%20to%20Deltaline/#pull-requests","text":"Describe the change (issue fix, clean up code, etc) When doing a pull request, make sure the pull request goes into the dev branch And dont delete the dev branch List the branch, and the commit number starting from the most recent commit","title":"Pull Requests"},{"location":"Contributing%20to%20Deltaline/#code-styleguides","text":"Please make sure that the code is readable and clean. for example, <head><meta name=\"viewport\" content =\"width=device-width, initial-scale=1, user-scalable=yes\" /> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\"> <link rel=\"stylesheet\" href=\"style.css\"> <link rel=\"shortcut icon\" type=\"image/jpg\" href=\"Dcey SMP Logo V4 Release.webp\"/> <title>Deltaline</title> </head> (proper example) This is a proper way to do it. But for example, <meta charset=\"utf-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\"> <link rel=\"stylesheet\" href=\"style.css\"> <link rel=\"shortcut icon\" type=\"image/jpg\" href=\"Dcey SMP Logo V4 Release.webp\"/> <title>Deltaline</title> this one is too messy and it's kinda hard to read Long story short : Just make it easy to read","title":"Code Styleguides"},{"location":"Contributing%20to%20the%20docs/","text":"Contributing to the Docs You can contribute to the docs if you want to, but mostly the digital portfolio itself will be kept private for privacy reasons. Just make sure to: Make a clone of this repo Start this up on MkDocs Load in all requirements and dependencies (check requirements.txt)","title":"Contributing to the Docs"},{"location":"Contributing%20to%20the%20docs/#contributing-to-the-docs","text":"You can contribute to the docs if you want to, but mostly the digital portfolio itself will be kept private for privacy reasons. Just make sure to: Make a clone of this repo Start this up on MkDocs Load in all requirements and dependencies (check requirements.txt)","title":"Contributing to the Docs"},{"location":"Issues%20with%20the%20Digital%20Portfolio.md/","text":"Issues with the Digital Portfolio The whole reason why I decided to recode Deltaline in HTML was mainly because I already knew how to do code in HTML, and in Python. Soon I will be moving it to Vue.js and/or Django (to hopefully to use python as well). The Google Sites version has some major issues, and mostly regarding load times. Loading Times Lighthouse Test on the Google Sites version (the home page) Lighthouse Test on the self-made (hosted on Netifly) version (home page) As you can see, there is a massive improvement when it comes in loading times with the self-coded version. This was done on my laptop running the latest version of chrome and running Windows 10 Pro as well. All the conditions were the same when testing (the same chrome extensions, etc) This was one of the biggest reasons why I decided to make the website myself. Without Google's slow font api, and with full control over how I add images and other content, this allows for a lag-free experience. I'll try my best to reduce as much lag as possible. How the Website Looks Google Sites is very basic in design; it was meant to be easily deployed without having to touch any of the HTML, CSS, PHP, JS, or .Net code and framework. And since it's very basic in design, it doesn't allow for much control and how the website is built. Essentially, it's just the worse version of wordpress. So I decided to just rewrite the whole entire thing from the start. Optimizations Google Sites only accepts .png, .jpg, and .gif image files. Nothing else. This isn't good for a website where it needs to load in HD assets, and takes a toll on Google Sites. With Netifly, it allows for compression and combined with Cloudflare, it allows for a very fast loading experience. In order to optimize the website, I used only svg files in order to reduce loading times, and mainly used the Bootstrap lib for mobile support.","title":"Issues with the Digital Portfolio"},{"location":"Issues%20with%20the%20Digital%20Portfolio.md/#issues-with-the-digital-portfolio","text":"The whole reason why I decided to recode Deltaline in HTML was mainly because I already knew how to do code in HTML, and in Python. Soon I will be moving it to Vue.js and/or Django (to hopefully to use python as well). The Google Sites version has some major issues, and mostly regarding load times.","title":"Issues with the Digital Portfolio"},{"location":"Issues%20with%20the%20Digital%20Portfolio.md/#loading-times","text":"Lighthouse Test on the Google Sites version (the home page) Lighthouse Test on the self-made (hosted on Netifly) version (home page) As you can see, there is a massive improvement when it comes in loading times with the self-coded version. This was done on my laptop running the latest version of chrome and running Windows 10 Pro as well. All the conditions were the same when testing (the same chrome extensions, etc) This was one of the biggest reasons why I decided to make the website myself. Without Google's slow font api, and with full control over how I add images and other content, this allows for a lag-free experience. I'll try my best to reduce as much lag as possible.","title":"Loading Times"},{"location":"Issues%20with%20the%20Digital%20Portfolio.md/#how-the-website-looks","text":"Google Sites is very basic in design; it was meant to be easily deployed without having to touch any of the HTML, CSS, PHP, JS, or .Net code and framework. And since it's very basic in design, it doesn't allow for much control and how the website is built. Essentially, it's just the worse version of wordpress. So I decided to just rewrite the whole entire thing from the start.","title":"How the Website Looks"},{"location":"Issues%20with%20the%20Digital%20Portfolio.md/#optimizations","text":"Google Sites only accepts .png, .jpg, and .gif image files. Nothing else. This isn't good for a website where it needs to load in HD assets, and takes a toll on Google Sites. With Netifly, it allows for compression and combined with Cloudflare, it allows for a very fast loading experience. In order to optimize the website, I used only svg files in order to reduce loading times, and mainly used the Bootstrap lib for mobile support.","title":"Optimizations"}]}